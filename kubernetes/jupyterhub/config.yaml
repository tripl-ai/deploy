hub:
  db:
    type: sqlite-memory
  extraConfig:
    overrideServiceAccount: |
      # this script allows serviceAccountName to use dynamic naming based on {unescaped_username}"
      async def override_service_account_hook(kube_spawner):
        if kube_spawner.service_account is not None:
          kube_spawner.service_account = kube_spawner._expand_user_properties(kube_spawner.service_account)

      c.KubeSpawner.pre_spawn_hook = override_service_account_hook

proxy:
  secretToken: "27218f0e5e27d110aefb2ba3578c8f3ad40cc7d7c544bd04d92b879bf8a82305"

auth:
  dummy:
    password: "password"

singleuser:
  defaultUrl: "/lab"
  image:
    name: triplai/arc-jupyter
    tag: latest
    pullPolicy: Always
  serviceAccountName: "{unescaped_username}"
  storage:
    type: none
  cpu:
    guarantee: 16
  memory:
    guarantee: 32G
  extraEnv:
    JAVA_OPTS: -Xmx30G
  lifecycleHooks:
    postStart:
      exec:
        command:
          - "bash"
          - "-c"
          - >
            cp -r /opt/.jupyter $HOME/.jupyter;
            echo "git clone https://github.com/tripl-ai/deploy";
            git clone -b jupyterhub --single-branch https://github.com/tripl-ai/deploy;  
  profileList:
    - display_name: "Arc"
      description: "Arc-Jupyter Development Environment"
      default: true
      kubespawner_override:
        image: triplai/arc-jupyter:latest
        port: 8080

